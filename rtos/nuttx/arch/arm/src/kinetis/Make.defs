############################################################################
# arch/arm/src/kinetis/Make.defs
#
#   Copyright (C) 2011 Gregory Nutt. All rights reserved.
#   Author: Gregory Nutt <spudmonkey@racsa.co.cr>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
# 3. Neither the name NuttX nor the names of its contributors may be
#    used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
############################################################################

# The start-up, "head", file

HEAD_ASRC	= kinetis_vectors.S

# Common ARM and Cortex-M3 files

CMN_ASRCS	= up_saveusercontext.S up_fullcontextrestore.S up_switchcontext.S
CMN_CSRCS	= up_allocateheap.c up_assert.c up_blocktask.c up_copystate.c \
		  up_createstack.c up_mdelay.c up_udelay.c up_exit.c up_initialize.c \
		  up_memfault.c up_initialstate.c up_interruptcontext.c \
		  up_modifyreg8.c up_modifyreg16.c up_modifyreg32.c \
		  up_releasestack.c up_reprioritizertr.c up_schedulesigaction.c \
		  up_releasepending.c up_sigdeliver.c up_unblocktask.c up_usestack.c \
		  up_doirq.c up_hardfault.c up_svcall.c up_checkstack.c

ifeq ($(CONFIG_NET),y)
ifneq ($(CONFIG_KINETIS_ENET),y)
CMN_CSRCS	+= up_etherstub.c
endif
endif

# Required Kinetis files

CHIP_ASRCS	=
CHIP_CSRCS	= kinetis_clockconfig.c kinetis_clrpend.c kinetis_idle.c \
		  kinetis_irq.c kinetis_lowputc.c kinetis_pin.c kinetis_pingpio.c \
		  kinetis_serial.c kinetis_start.c kinetis_timerisr.c kinetis_wdog.c

# Configuration-dependent Kinetis files

ifeq ($(CONFIG_GPIO_IRQ),y)
CHIP_CSRCS	+= kinetis_pinirq.c
endif

ifeq ($(CONFIG_DEBUG_GPIO),y)
CHIP_CSRCS	+= kinetis_pindbg.c
endif

ifeq ($(CONFIG_KINETIS_SDHC),y)
CHIP_CSRCS	+= kinetis_sdhc.c
endif

ifeq ($(CONFIG_USBDEV),y)
CHIP_CSRCS	+= kinetis_usbdev.c
endif

ifeq ($(CONFIG_USBHOST),y)
CHIP_CSRCS	+= kinetis_usbhost.c
endif

ifeq ($(CONFIG_KINETIS_DMA),y)
CHIP_CSRCS	+= kinetis_dma.c kinetis_pindma.c
endif

ifeq ($(CONFIG_NET),y)
ifeq ($(CONFIG_KINETIS_ENET),y)
CHIP_CSRCS	+= kinetis_enet.c
endif
endif
